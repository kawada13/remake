version: 2.1
jobs:
  build:
    docker:
      - image: circleci/php:7.4-node-browsers
        environment:
          - APP_DEBUG: true
          - APP_ENV: testing
          - DB_CONNECTION: mysql
          - DB_DATABASE: test_game
          - DB_USERNAME: root

      - image: circleci/mysql:5.7-ram
        environment:
          - MYSQL_ALLOW_EMPTY_PASSWORD: true
          - MYSQL_DATABASE: test_game
    steps:
     - checkout

     - run: sudo apt update
     - run: sudo apt-get install libfreetype6-dev
     - run: sudo apt-get install libjpeg62-turbo-dev
     - run: sudo apt-get install libpng-dev
     - run: sudo apt-get install libwebp-dev
     - run: sudo apt-get install libxpm-dev

     - run: sudo docker-php-ext-install pdo_mysql
     - run: sudo docker-php-ext-configure gd --with-freetype=/usr/include/ --with-jpeg=/usr/include/
     - run: sudo docker-php-ext-install -j$(nproc) gd


     - restore_cache:
          key: composer-v1-{{ checksum "backend/gameMusic/composer.lock" }}
     - run:
          working_directory: backend/gameMusic
          command: composer install -n --prefer-dist
     - save_cache:
          key: composer-v1-{{ checksum "backend/gameMusic/composer.lock" }}
          paths:
            - backend/gameMusic/vendor


     - run:
          working_directory: backend/gameMusic
          command: echo "APP_KEY=" > .env.testing
     - run:
          working_directory: backend/gameMusic
          command: php artisan key:generate
     - run:
          working_directory: backend/gameMusic
          command: php artisan migrate
     - run:
          working_directory: backend/gameMusic
          command: npm ci
     - run:
          working_directory: backend/gameMusic
          command: npm run dev
     - run:
          working_directory: backend/gameMusic
          command: ./vendor/bin/phpunit

  deploy:
   docker:
    - image: circleci/php:7.4-node-browsers
   steps:
    - add_ssh_keys
    - run:
       name: deploy
       command: |
        ssh -o StrictHostKeyChecking=no -t ubuntu@${HOST_NAME} "cd remake && \
         git pull origin main && \
         composer install && \
         php artisan migrate && \
         php artisan config:cache"


workflows:
  version: 2
  build_deploy:
    jobs:
      - build
      - deploy:
          requires:
            - build
          filters:
            branches:
              only:
                - main